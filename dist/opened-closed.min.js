!function(){Object.defineProperty({},"__esModule",{value:!0});class t{constructor(e){if(!this._isObject(e))throw new Error(t.ERR_OPTIONS_NOT_OBJECT);if(0===Object.keys(e).length)throw new Error(t.ERR_OPTIONS_EMPTY);if("timezone"in e==0)throw new Error(t.ERR_OPTIONS_MISSING_TIMEZONE);this._options=e,this.now=new Date,this._throwErrorIfClosingDateIncorrect(),this._throwErrorIfOpeningDateIncorrect(),this._autoFillLanguage()}opened(){let t=!1;const e=this._now();for(const r in this._options.openings){const n=this._options.openings[r];for(const o of n){const n=this._getDateFromString(o.start),i=this._getDateFromString(o.end),s=this._nowIsClosed();if(this._nowIsTheDay(r)&&this._dateBetween(e,n,i)&&!s){t=!0;break}}}return t}availability(){let t=this._options.language.closed;return!0===this.opened()&&(t=this._options.language.opened),t}closeIn(){let t=[];const e=this._now();for(const r in this._options.openings){const n=this._options.openings[r];for(const o of n){const n=this._getDateFromString(o.start),i=this._getDateFromString(o.end);if(this._nowIsTheDay(r)&&this._dateBetween(e,n,i)){const r=this._datesDifferenceToEpoch(e,i);t.push(r);break}}}return this._max(t)}closeAt(){let t=new Date;const e=this._now();for(const r in this._options.openings){const n=this._options.openings[r];for(const o of n){const n=this._getDateFromString(o.start),i=this._getDateFromString(o.end);if(this._nowIsTheDay(r)&&this._dateBetween(e,n,i)){t=i;break}}}return t}_currentYear(){return this.now.getFullYear()}_currentMonth(){return this.now.getMonth()+1}_currentDay(){return this.now.getDate()}_dayNow(){return this.now.getDay()}_now(){return new Date}_currentDate(t){return`${t.year}-${t.month}-${t.day} ${t.time} ${this._options.timezone}`}_getDateFromString(e){if(!this._isString(e))throw new Error(t.ERR_TIME_SHOULD_BE_STRING);if(0===e.length)throw new Error(t.ERR_TIME_NOT_CORRECT);const r=this._currentYear(),n=this._currentMonth(),o=this._currentDay(),i=this._currentDate({year:r,month:n,day:o,time:e}),s=new Date(i);if(isNaN(s.getTime()))throw new Error(t.ERR_TIME_NOT_CORRECT);return new Date(i)}_dayNumberFromString(e){let r=0;switch(e){case"sunday":r=0;break;case"monday":r=1;break;case"tuesday":r=2;break;case"wednesday":r=3;break;case"thursday":r=4;break;case"friday":r=5;break;case"saturday":r=6;break;default:throw new Error(t.ERR_UNSUPPORTED_DAY)}return r}_nowIsTheDay(t){const e=this._dayNumberFromString(t);return this._dayNow()===e}_autoFillLanguage(){if("language"in this._options==0)return void(this._options.language={opened:"opened",closed:"closed"});const e=this._options.language;if(!this._isObject(e))throw new Error(t.ERR_OPTIONS_LANGUAGE_NOT_OBJECT);"opened"in this._options.language==0&&(this._options.language.opened=t.DEFAULT_LANGUAGE_OPENED);const r=this._options.language.opened;if(!this._isString(r))throw new Error(t.ERR_OPTIONS_LANGUAGE_OPENED_NOT_STRING);if(0===r.trim().length)throw new Error(t.ERR_OPTIONS_LANGUAGE_OPENED_EMPTY);"closed"in this._options.language==0&&(this._options.language.closed=t.DEFAULT_LANGUAGE_CLOSED);const n=this._options.language.closed;if(!this._isString(n))throw new Error(t.ERR_OPTIONS_LANGUAGE_CLOSED_NOT_STRING);if(0===n.trim().length)throw new Error(t.ERR_OPTIONS_LANGUAGE_CLOSED_EMPTY)}_dateToEpoch(e){if(!this._isDate(e))throw new Error(t.ERR_INTERNAL_NOT_DATE);let r=e.getTime()/1e3;return parseInt(r.toString())}_datesDifferenceToEpoch(t,e){const r=this._dateToEpoch(t);return this._dateToEpoch(e)-r}_max(e){if(!Array.isArray(e))throw new Error(t.ERR_INTERNAL_NOT_ARRAY);return 0===e.length?0:Math.max(...e)}_nowIsClosed(){let t=!this._hasOpenings();const e=this._options.closings,r=this._now();if(Array.isArray(e))for(const n of e)if(this._dateBetween(r,n.from,n.to)){t=!0;break}return t}_throwErrorIfClosingDateIncorrect(){const e="closings"in this._options?this._options.closings:void 0;if(Array.isArray(e))for(const r of e){if(!this._isObject(r))throw new Error(t.ERR_CLOSINGS_DATE_NOT_OBJECT);if("from"in r==0)throw new Error(t.ERR_MISSING_FROM_KEY);if("to"in r==0)throw new Error(t.ERR_MISSING_TO_KEY);const e=r.from,n=r.to;if(!this._isDate(e))throw new Error(t.ERR_KEY_FROM_NOT_DATE);if(!this._isDate(n))throw new Error(t.ERR_KEY_TO_NOT_DATE)}else if(null!=e)throw new Error(t.ERR_MALFORMED_CLOSINGS)}_throwErrorIfOpeningDateIncorrect(){const e=this._options.openings;if(this._isObject(e))for(const r in e){const n=e[r];if(!Array.isArray(n))throw new Error(t.ERR_MALFORMED_OPENINGS);for(const e of n){if(!this._isObject(e))throw new Error(t.ERR_MALFORMED_OPENINGS);if(!("start"in e&&"end"in e))throw new Error(t.ERR_MALFORMED_OPENINGS);this._getDateFromString(e.start),this._getDateFromString(e.end)}}else if(null!=e)throw new Error(t.ERR_MALFORMED_OPENINGS)}_dateBetween(t,e,r){return e<=t&&t<=r}_isDate(t){return t instanceof Date}_isObject(t){return t instanceof Object}_isString(t){return"string"==typeof t}_hasOpenings(){return"openings"in this._options&&Object.keys(this._options.openings).length>0}}t.ERR_OPTIONS_NOT_OBJECT="expected parameter 1 to be an object",t.ERR_OPTIONS_EMPTY="options is empty",t.ERR_OPTIONS_MISSING_TIMEZONE="options is missing timezone",t.ERR_OPTIONS_LANGUAGE_NOT_OBJECT="language options should be an object",t.ERR_OPTIONS_LANGUAGE_OPENED_NOT_STRING="opened language is string",t.ERR_OPTIONS_LANGUAGE_OPENED_EMPTY="opened language is empty",t.ERR_OPTIONS_LANGUAGE_CLOSED_NOT_STRING="closed language is string",t.ERR_OPTIONS_LANGUAGE_CLOSED_EMPTY="closed language is empty",t.ERR_UNSUPPORTED_DAY="unsupported day",t.ERR_MISSING_FROM_KEY='key "from" is missing',t.ERR_MISSING_TO_KEY='key "to" is missing',t.ERR_KEY_FROM_NOT_DATE='key "from" should be a Date',t.ERR_KEY_TO_NOT_DATE='key "to" should be a Date',t.ERR_CLOSINGS_DATE_NOT_OBJECT="each closing dates should be an object",t.ERR_MALFORMED_OPENINGS="malformed openings data",t.ERR_MALFORMED_CLOSINGS="malformed closings data",t.ERR_TIME_NOT_CORRECT="the time is not valid",t.ERR_TIME_SHOULD_BE_STRING="the time should be a string",t.ERR_INTERNAL_NOT_DATE="internal error: invalid date",t.ERR_INTERNAL_NOT_ARRAY="internal error: invalid array",t.DEFAULT_LANGUAGE_CLOSED="closed",t.DEFAULT_LANGUAGE_OPENED="opened"}();